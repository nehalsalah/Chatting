//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.01.19 at 05:31:18 PM EET 
//


package savechat;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for fontFamily.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="fontFamily">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Arial"/>
 *     &lt;enumeration value="Times"/>
 *     &lt;enumeration value="Helvetica"/>
 *     &lt;enumeration value="Courier"/>
 *     &lt;enumeration value="Verdana"/>
 *     &lt;enumeration value="Georgia"/>
 *     &lt;enumeration value="Palatino"/>
 *     &lt;enumeration value="Garamond"/>
 *     &lt;enumeration value="Impact"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "fontFamily")
@XmlEnum
public enum FontFamily {

    @XmlEnumValue("Arial")
    ARIAL("Arial"),
    @XmlEnumValue("Times")
    TIMES("Times"),
    @XmlEnumValue("Helvetica")
    HELVETICA("Helvetica"),
    @XmlEnumValue("Courier")
    COURIER("Courier"),
    @XmlEnumValue("Verdana")
    VERDANA("Verdana"),
    @XmlEnumValue("Georgia")
    GEORGIA("Georgia"),
    @XmlEnumValue("Palatino")
    PALATINO("Palatino"),
    @XmlEnumValue("Garamond")
    GARAMOND("Garamond"),
    @XmlEnumValue("Impact")
    IMPACT("Impact");
    private final String value;

    FontFamily(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static FontFamily fromValue(String v) {
        for (FontFamily c: FontFamily.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
